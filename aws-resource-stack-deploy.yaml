Description: This template deploys an AWS Glue-based data pipeline integrated with Amazon Redshift,
  leveraging AWS CloudFormation for automated resource provisioning.
  The setup includes S3 bucket configuration, Glue database, Glue ETL job for table partitioning and schema updates,
  Redshift serverless resources, and roles.
# CloudFormation resolves dependencies automatically, so resource order doesn't matter for execution
# Quotation marks are optional for plain strings, but required when the value contains special characters (e.g., :) to prevent ambiguity or parsing issues
# If errors occur during deployment, CloudFormation rolls back all partially created resources to ensure no incomplete or orphaned resources remain

Parameters:
  S3BucketName:
    Default: tencent-bim # Default value must be a static string and is invalid if dynamically evaluated by an intrinsic function
    Type: String
  GlueDatabaseName:
    Default: tencent-bim_database
    Type: String
  GlueServiceRoleName:
    Default: AWSGlueServiceRole_tencent-bim
    Type: String
  GlueJobName:
    Default: tencent-bim_partition_job
    Type: String
  GlueAssetsName:
    Default: aws_glue_assets
    Type: String
  RedshiftNamespaceName:
    Default: tencent-bim-namespace
    Type: String
  RedshiftWorkgroupName:
    Default: tencent-bim-workgroup
    Type: String
  RedshiftServiceRoleName:
    Default: AmazonRedshiftServiceRole_tencent-bim
    Type: String

Resources:
  # Folder (object) creation not supported by CloudFormation will be implemented programmatically via idempotent tasks in Airflow-triggered workflows to separate concerns between resource creation and initialization
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref S3BucketName
      # VersioningConfiguration:
      #   Status: Enabled

  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3Bucket # !Ref on a bucket resource resolves to the bucket's name
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowSpecificPrincipalsFullAccessToBucket
            Effect: Allow
            Principal:
              AWS:
                - !GetAtt GlueServiceRole.Arn
                - !GetAtt RedshiftServiceRole.Arn
                - !Sub arn:aws:iam::${AWS::AccountId}:user/sicong-e-project
            Action: s3:*
            Resource:
              - !Sub arn:aws:s3:::${S3BucketName}/*
              - !Sub arn:aws:s3:::${S3BucketName}

  GlueDatabase:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Name: !Ref GlueDatabaseName

  GlueJob:
    Type: AWS::Glue::Job
    Properties:
      Name: !Ref GlueJobName
      Description: Partitions data from the source S3 bucket, 
        adds a current timestamp as part of the transformation,
        stores the output data in the target S3 bucket and updates the schema table for querying in Redshift,
        allowing filtering by the latest timestamp to ensure access to the most recent data.
      Role: !GetAtt GlueServiceRole.Arn
      Command:
        Name: glueetl
        ScriptLocation: !Sub s3://${S3BucketName}/${GlueAssetsName}/scripts/${GlueJobName}.py # Cannot be empty for glueetl command 
        PythonVersion: '3'
      DefaultArguments:
        '--job-bookmark-option': job-bookmark-enable
        '--enable-spark-ui': 'false'
        '--enable-job-insights': 'true'
        '--TempDir': !Sub s3://${S3BucketName}/${GlueAssetsName}/temporary/
        '--BucketName': !Ref S3BucketName
        '--DatabaseName': !Ref GlueDatabaseName
      MaxRetries: 3
      NumberOfWorkers: 2
      WorkerType: G.1X

  GlueServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref GlueServiceRoleName
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: glue.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole
      Policies:
        - PolicyName: GlueCrawlerS3Policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource:
                  - !Sub arn:aws:s3:::${S3BucketName}/*

  RedshiftNamespace:
    Type: AWS::RedshiftServerless::Namespace
    Properties:
      NamespaceName: !Ref RedshiftNamespaceName
      DefaultIamRoleArn: !GetAtt RedshiftServiceRole.Arn
      IamRoles:
        - !GetAtt RedshiftServiceRole.Arn

  RedshiftWorkgroup:
    Type: AWS::RedshiftServerless::Workgroup
    DependsOn: RedshiftNamespace # Ensure the dependent resource is fully initialized before proceeding
    Properties:
      WorkgroupName: !Ref RedshiftWorkgroupName
      NamespaceName: !Ref RedshiftNamespaceName
      BaseCapacity: 8

  RedshiftServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref RedshiftServiceRoleName
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: redshift.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonRedshiftAllCommandsFullAccess
      Policies:
        - PolicyName: RedshiftS3Policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                  - s3:ListBucket
                Resource:
                  - !Sub arn:aws:s3:::${S3BucketName}/*